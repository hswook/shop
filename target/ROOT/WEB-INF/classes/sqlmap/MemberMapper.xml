<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sh.shop.persistence.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.sh.shop.domain.Member" >
    <id column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="PW" property="pw" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="CHAR" />
    <result column="USE_YN" property="useYn" jdbcType="VARCHAR" />
    <result column="JOINDT" property="joindt" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    EMAIL, PW, `NAME`, `TYPE`, USE_YN, JOINDT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sh.shop.domain.MemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from MEMBER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from MEMBER
    where EMAIL = #{email,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from MEMBER
    where EMAIL = #{email,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sh.shop.domain.MemberExample" >
    delete from MEMBER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sh.shop.domain.Member" >
    insert into MEMBER (EMAIL, PW, `NAME`, 
      `TYPE`, USE_YN, JOINDT)
    values (#{email,jdbcType=VARCHAR}, #{pw,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=CHAR}, #{useYn,jdbcType=VARCHAR}, #{joindt,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.sh.shop.domain.Member" >
    insert into MEMBER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="pw != null" >
        PW,
      </if>
      <if test="name != null" >
        `NAME`,
      </if>
      <if test="type != null" >
        `TYPE`,
      </if>
      <if test="useYn != null" >
        USE_YN,
      </if>
      <if test="joindt != null" >
        JOINDT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pw != null" >
        #{pw,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="useYn != null" >
        #{useYn,jdbcType=VARCHAR},
      </if>
      <if test="joindt != null" >
        #{joindt,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sh.shop.domain.MemberExample" resultType="java.lang.Integer" >
    select count(*) from MEMBER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update MEMBER
    <set >
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.pw != null" >
        PW = #{record.pw,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        `NAME` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        `TYPE` = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.useYn != null" >
        USE_YN = #{record.useYn,jdbcType=VARCHAR},
      </if>
      <if test="record.joindt != null" >
        JOINDT = #{record.joindt,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update MEMBER
    set EMAIL = #{record.email,jdbcType=VARCHAR},
      PW = #{record.pw,jdbcType=VARCHAR},
      `NAME` = #{record.name,jdbcType=VARCHAR},
      `TYPE` = #{record.type,jdbcType=CHAR},
      USE_YN = #{record.useYn,jdbcType=VARCHAR},
      JOINDT = #{record.joindt,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sh.shop.domain.Member" >
    update MEMBER
    <set >
      <if test="pw != null" >
        PW = #{pw,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        `NAME` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `TYPE` = #{type,jdbcType=CHAR},
      </if>
      <if test="useYn != null" >
        USE_YN = #{useYn,jdbcType=VARCHAR},
      </if>
      <if test="joindt != null" >
        JOINDT = #{joindt,jdbcType=DATE},
      </if>
    </set>
    where EMAIL = #{email,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sh.shop.domain.Member" >
    update MEMBER
    set PW = #{pw,jdbcType=VARCHAR},
      `NAME` = #{name,jdbcType=VARCHAR},
      `TYPE` = #{type,jdbcType=CHAR},
      USE_YN = #{useYn,jdbcType=VARCHAR},
      JOINDT = #{joindt,jdbcType=DATE}
    where EMAIL = #{email,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.sh.shop.domain.MemberExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from MEMBER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="getCountById" parameterType="String" resultType="Integer">
  	
  </select>
</mapper>